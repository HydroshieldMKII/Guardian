name: Build & Push to DockerHub

on:
  release:
    types: [published]

concurrency:
  group: dockerhub-publish-${{ github.event.release.tag_name }}
  cancel-in-progress: false

permissions:
  contents: read
  actions: write
  packages: write

env:
  RELEASE_TAG: ${{ github.event.release.tag_name }}

jobs:
  build-backend-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend AMD64
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64
          push: false
          tags: |
            docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }}-amd64
          cache-from: type=gha,scope=guardian-backend-amd64
          cache-to: type=gha,scope=guardian-backend-amd64,mode=max
          outputs: type=docker,dest=/tmp/backend-amd64.tar

      - name: Upload AMD64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-amd64
          path: /tmp/backend-amd64.tar
          retention-days: 1

  build-backend-arm64:
    runs-on: ubuntu-24.04-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend ARM64
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/arm64
          push: false
          tags: |
            docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }}-arm64
          cache-from: type=gha,scope=guardian-backend-arm64
          cache-to: type=gha,scope=guardian-backend-arm64,mode=max
          outputs: type=docker,dest=/tmp/backend-arm64.tar

      - name: Upload ARM64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-arm64
          path: /tmp/backend-arm64.tar
          retention-days: 1

  build-frontend-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Frontend AMD64
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64
          push: false
          tags: |
            docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }}-amd64
          cache-from: type=gha,scope=guardian-frontend-amd64
          cache-to: type=gha,scope=guardian-frontend-amd64,mode=max
          outputs: type=docker,dest=/tmp/frontend-amd64.tar

      - name: Upload AMD64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-amd64
          path: /tmp/frontend-amd64.tar
          retention-days: 1

  build-frontend-arm64:
    runs-on: ubuntu-24.04-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Frontend ARM64
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/arm64
          push: false
          tags: |
            docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }}-arm64
          cache-from: type=gha,scope=guardian-frontend-arm64
          cache-to: type=gha,scope=guardian-frontend-arm64,mode=max
          outputs: type=docker,dest=/tmp/frontend-arm64.tar

      - name: Upload ARM64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-arm64
          path: /tmp/frontend-arm64.tar
          retention-days: 1

  push-backend:
    needs: [build-backend-amd64, build-backend-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download AMD64 artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-amd64
          path: /tmp

      - name: Download ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-arm64
          path: /tmp

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Load AMD64 image
        run: docker load --input /tmp/backend-amd64.tar

      - name: Load ARM64 image
        run: docker load --input /tmp/backend-arm64.tar

      - name: Push manifest
        run: |
          docker tag docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }}-amd64 docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }}
          docker push docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }}-amd64
          docker push docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }}-arm64
          
          docker manifest create docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }} \
            --amend docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }}-amd64 \
            --amend docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }}-arm64
          
          docker manifest create docker.io/hydroshieldmkii/guardian-backend:latest \
            --amend docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }}-amd64 \
            --amend docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }}-arm64
          
          docker manifest push docker.io/hydroshieldmkii/guardian-backend:${{ env.RELEASE_TAG }}
          docker manifest push docker.io/hydroshieldmkii/guardian-backend:latest

  push-frontend:
    needs: [build-frontend-amd64, build-frontend-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download AMD64 artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-amd64
          path: /tmp

      - name: Download ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-arm64
          path: /tmp

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Load AMD64 image
        run: docker load --input /tmp/frontend-amd64.tar

      - name: Load ARM64 image
        run: docker load --input /tmp/frontend-arm64.tar

      - name: Push manifest
        run: |
          docker tag docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }}-amd64 docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }}
          docker push docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }}-amd64
          docker push docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }}-arm64
          
          docker manifest create docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }} \
            --amend docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }}-amd64 \
            --amend docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }}-arm64
          
          docker manifest create docker.io/hydroshieldmkii/guardian-frontend:latest \
            --amend docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }}-amd64 \
            --amend docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }}-arm64
          
          docker manifest push docker.io/hydroshieldmkii/guardian-frontend:${{ env.RELEASE_TAG }}
          docker manifest push docker.io/hydroshieldmkii/guardian-frontend:latest

  publish-confirmation:
    runs-on: ubuntu-latest
    needs: [push-backend, push-frontend]
    steps:
      - run: echo "âœ… Release ${{ env.RELEASE_TAG }} images built and published."