name: Build & Push to DockerHub

on:
  push:
    branches: ["main"]

concurrency:
  group: dockerhub-publish-main
  cancel-in-progress: false

permissions:
  contents: read # checkout + path filter
  actions: write # Buildx cache (type=gha)

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  build-backend:
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push Backend (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: docker.io/hydroshieldmkii/guardian-backend:latest
          cache-from: type=gha,scope=guardian-backend
          cache-to: type=gha,scope=guardian-backend,mode=max

  build-frontend:
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push Frontend (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: docker.io/hydroshieldmkii/guardian-frontend:latest
          cache-from: type=gha,scope=guardian-frontend
          cache-to: type=gha,scope=guardian-frontend,mode=max

  publish-confirmation:
    runs-on: ubuntu-latest
    needs: [changes, build-backend, build-frontend]
    if: |
      always() &&
      (needs.changes.outputs.backend != 'true' || needs.build-backend.result == 'success') &&
      (needs.changes.outputs.frontend != 'true' || needs.build-frontend.result == 'success') &&
      (needs.changes.outputs.backend == 'true' || needs.changes.outputs.frontend == 'true')
    permissions:
      contents: read
    steps:
      - run: echo "âœ… Images published for changed components."
